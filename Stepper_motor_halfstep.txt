/*
 * main.c
 *
 *  Created on: 31-May-2022
 *      Author: Rajashree
 */
#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdbool.h>
#include <util/delay.h>
#define PORTx       PORTD
/*
 * On the stepper motor board
 * PWM1 Yellow
 * PWM2 Red
 * PWM3 Orange
 * PWM4 Green
 */
void PWM_init ()
{
	DDRD |= _BV(PD6) |_BV(PD5)|_BV(PD3)|_BV(PD2)|_BV(PD7)|_BV(PD4);
	DDRB |= _BV(PB2);
	PORTD |= (1<<PORTD4) | (1<<PORTD7);
	TCCR1B |= _BV(WGM12) |_BV(CS10);//TIMER 1 PWM1
	//TCCR1A |= _BV(WGM10) | _BV(COM1A1);//TIMER 1 PWM1
	TCCR2B |= _BV(CS20);//TIMER 2 PWM2
	//TCCR2A |= _BV(WGM20) | _BV(WGM21);//TIMER 2 PWM2
	TCCR0B |= _BV(CS00);//|_BV(CS01);//TIMER 0 PWM3 and PWM4 Prescaler scaled by 64
	//TCCR0A |= _BV(WGM00) | _BV(WGM01);//TIMER0 PWM3 PWM4
}

int main (void)
{
while(1)
{
	PWM_init();
	//STEP1 PWM 1 NON ZERO
	TCCR1A =_BV(COM1B1)|_BV(WGM10) | _BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2A1)|_BV(COM2A0)|_BV(COM2B1)|_BV(COM2B0)|_BV(WGM20) | _BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0B0)|_BV(COM0A0)|_BV(COM0A1)|_BV(WGM00) | _BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);

	//PWM1 PWM3
	TCCR1A =_BV(COM1B1)|_BV(WGM10) | _BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2A1)|_BV(COM2A0)|_BV(COM2B1)|_BV(COM2B0)|_BV(WGM20) | _BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0A0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);

   //STEP 3 PWM3 NON ZERO
	TCCR1A =_BV(COM1B1)|_BV(COM1B0)|_BV(WGM10)|_BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2A1)|_BV(COM2A0)|_BV(COM2B1)|_BV(COM2B0)|_BV(WGM20)|_BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0A0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);

	//PWM3 PWM2

	TCCR1A =_BV(COM1B1)|_BV(COM1B0)|_BV(WGM10)|_BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2B1)|_BV(WGM20)|_BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0A0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);

	//PWM2
	TCCR1A =_BV(COM1B1)|_BV(COM1B0)|_BV(WGM10)|_BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2B1)|_BV(WGM20)|_BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0A0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01)|_BV(COM0B0);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);

	//PWM2 PWM4
	TCCR1A =_BV(COM1B1)|_BV(COM1B0)|_BV(WGM10) | _BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2B1)|_BV(WGM20)|_BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0B0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);


	//STEP 4 PWM4 NON ZERO
	TCCR1A =_BV(COM1B1)|_BV(COM1B0)|_BV(WGM10) | _BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2A1)|_BV(COM2A0)|_BV(COM2B1)|_BV(COM2B0)|_BV(WGM20) |_BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0B0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);

	//PWM4 PWM1

	TCCR1A =_BV(COM1B1)|_BV(WGM10) | _BV(COM1A1);
	OCR1B = 0xFF;//PWM1
	TCCR2A =_BV(COM2A1)|_BV(COM2A0)|_BV(COM2B1)|_BV(COM2B0)|_BV(WGM20) |_BV(WGM21);
	OCR2B = 0xFF;//PWM2
	TCCR0A =_BV(COM0B1)|_BV(COM0B0)|_BV(COM0A1)|_BV(WGM00) |_BV(WGM01);
	OCR0A = 0xFF;//PWM4
	OCR0B = 0xFF;//PWM3
	_delay_ms(5000);


}
}





